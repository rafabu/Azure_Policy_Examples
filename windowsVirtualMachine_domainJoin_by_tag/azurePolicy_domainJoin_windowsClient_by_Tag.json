{
  "properties": {
    "policyType": "Custom",
    "mode": "Indexed",
    "displayName": "[Custom] Windows Client Domain Join (by key vault) - based on tag value.",
    "description": "Deploy Windows Domain Join Extension with KeyVault configuration when the extension does not exist on a given windows Virtual Machine. Joins VM to domain at given OU while getting domain name and OU from resource tag either on resource or if not present the resource group. Join credentials are retrieved from key vault.",
    "metadata": {
      "version": "1.0.0",
      "category": "Guest Configuration",
      "source": "https://github.com/Azure/Enterprise-Scale/"
    },
    "parameters": {
      "domainUsername": {
        "type": "String",
        "metadata": {
          "displayName": "domainUsername (name of key vault secret)"
        }
      },
      "domainPassword": {
        "type": "String",
        "metadata": {
          "displayName": "domainPassword (name of key vault secret)"
        }
      },
      "keyVaultResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "keyVaultResourceId"
        }
      },
      "effect": {
        "type": "String",
        "defaultValue": "DeployIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        }
      },
      "domainFQDNTagName": {
        "type": "String",
        "metadata": {
          "displayName": "Windows AD Domain Name Tag Name",
          "description": "Name of the tag that defines the Windows AD Domain Name. Tag value must contain the FQDN of the Windows Domain."
        },
        "defaultValue": "cccWindowsDomainFQDN"
      },
      "domainOUPathTagName": {
        "type": "String",
        "metadata": {
          "displayName": "domainOUPath",
          "description": "Name of the tag that defines the Windows AD OU the computer account is created in. Tag value must contain the DN of the OU (with spaces)."
        },
        "defaultValue": "cccWindowsDomainOUPath"
      }
    },
    "policyRule": {
      "if": {
        "anyOf": [
          {
            "allOf": [
              {
                "anyOf": [
                  {
                    "field": "[concat('tags[', parameters('domainFQDNTagName'), ']')]",
                    "notEquals": ""
                  },
                  {
                    "value": "[resourceGroup().tags[parameters('domainFQDNTagName')]]",
                    "notEquals": ""
                  },
                  {
                    "value": "[subscription().tags[parameters('domainOUPathTagName')]]",
                    "notEquals": ""
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "field": "[concat('tags[', parameters('domainOUPathTagName'), ']')]",
                    "contains": "OU="
                  },
                  {
                    "value": "[resourceGroup().tags[parameters('domainOUPathTagName')]]",
                    "contains": "OU="
                  },
                  {
                    "value": "[subscription().tags[parameters('domainOUPathTagName')]]",
                    "contains": "OU="
                  }
                ]
              },
              {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Compute/imagePublisher",
                        "equals": "microsoft-ads"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "equals": "standard-data-science-vm"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Compute/imagePublisher",
                        "equals": "microsoftvisualstudio"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "in": [
                          "base-win10-gen2",
                          "base-win10-m365-gen2",
                          "base-win11-gen2",
                          "base-win11-m365-gen2",
                          "VS-2015-Comm-VSU3-AzureSDK-29-Win10-N",
                          "VS-2015-Ent-VSU3-AzureSDK-29-Win10-N",
                          "VS-2017-Comm-Latest-Win10-N",
                          "VS-2017-Comm-Win10-N",
                          "VS-2017-Ent-Latest-Win10-N",
                          "VS-2017-Ent-Win10-N",
                          "vs-2019-comm-latest-win10-n",
                          "vs-2019-comm-latest-win11-n",
                          "vs-2019-comm-latest-win11-n-gen2",
                          "vs-2019-ent-general-win10-m365-gen2",
                          "vs-2019-ent-general-win11-m365-gen2",
                          "vs-2019-ent-latest-win10-n",
                          "vs-2019-ent-latest-win11-n",
                          "vs-2019-ent-latest-win11-n-gen2",
                          "vs-2019-ent-win10-n",
                          "vs-2019-pro-general-win10-m365-gen2",
                          "vs-2019-pro-general-win11-m365-gen2",
                          "vs-2022-comm-latest-win11-n",
                          "vs-2022-comm-latest-win11-n-gen2",
                          "vs-2022-ent-general-win10-m365-gen2",
                          "vs-2022-ent-general-win11-m365-gen2",
                          "vs-2022-ent-latest-win11-n",
                          "vs-2022-ent-latest-win11-n-gen2",
                          "vs-2022-pro-general-win10-m365-gen2",
                          "vs-2022-pro-general-win11-m365-gen2",
                          "Win7-SP1-Ent-N-x64",
                          "Win81-Ent-N-x64",
                          "Windows-10-N-x64"
                        ]
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Compute/imagePublisher",
                        "equals": "MicrosoftWindowsDesktop"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          ],
          "evaluationDelay": "AfterProvisioningSuccess",
          "existenceCondition": {
            "allOf": [
              {
                "field": "Microsoft.Compute/virtualMachines/extensions/type",
                "equals": "JsonADDomainExtension"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                "equals": "Microsoft.Compute"
              }
            ]
          },
          "deployment": {
            "properties": {
              "mode": "Incremental",
              "parameters": {
                "vmName": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "domainUsername": {
                  "reference": {
                    "keyVault": {
                      "id": "[parameters('keyVaultResourceId')]"
                    },
                    "secretName": "[parameters('domainUsername')]"
                  }
                },
                "domainPassword": {
                  "reference": {
                    "keyVault": {
                      "id": "[parameters('keyVaultResourceId')]"
                    },
                    "secretName": "[parameters('domainPassword')]"
                  }
                },
                "domainOUPath": {
                  "value": "[if(greater(length(field(concat('tags[', parameters('domainOUPathTagName'), ']'))), 0), field(concat('tags[', parameters('domainOUPathTagName'), ']')), if(greater(length(resourceGroup().tags[parameters('domainOUPathTagName')]), 0), resourceGroup().tags[parameters('domainOUPathTagName')], subscription().tags[parameters('domainOUPathTagName')]))]"
                },
                "domainFQDN": {
                  "value": "[if(greater(length(field(concat('tags[', parameters('domainFQDNTagName'), ']'))), 0), field(concat('tags[', parameters('domainFQDNTagName'), ']')), if(greater(length(resourceGroup().tags[parameters('domainFQDNTagName')]), 0), resourceGroup().tags[parameters('domainFQDNTagName')], subscription().tags[parameters('domainFQDNTagName')]))]"
                },
                "keyVaultResourceId": {
                  "value": "[parameters('keyVaultResourceId')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "vmName": {
                    "type": "String"
                  },
                  "location": {
                    "type": "String"
                  },
                  "domainUsername": {
                    "type": "String"
                  },
                  "domainPassword": {
                    "type": "securestring"
                  },
                  "domainFQDN": {
                    "type": "String"
                  },
                  "domainOUPath": {
                    "type": "String"
                  },
                  "keyVaultResourceId": {
                    "type": "String"
                  }
                },
                "variables": {
                  "domainJoinOptions": 3,
                  "vmName": "[parameters('vmName')]"
                },
                "resources": [
                  {
                    "apiVersion": "2022-11-01",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/joindomain')]",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "JsonADDomainExtension",
                      "typeHandlerVersion": "1.3",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "Name": "[parameters('domainFQDN')]",
                        "User": "[parameters('domainUserName')]",
                        "Restart": "true",
                        "Options": "[variables('domainJoinOptions')]",
                        "OUPath": "[parameters('domainOUPath')]"
                      },
                      "protectedSettings": {
                        "Password": "[parameters('domainPassword')]"
                      }
                    }
                  }
                ],
                "outputs": {}
              }
            }
          }
        }
      }
    }
  }
}